#include <minix/syslib.h>
#include <minix/drivers.h>
#include <minix/driver.h>
#include <minix/com.h>
#include <minix/sysutil.h>
#include "mouse.h"
#include "i8042.h"
#include "keyboard.h"

static int mouse_hook = 2;
unsigned char packet[3]={NULL};

int mouse_subscribe_int(void){

	//Save original hook ID for the irq_set
	int originalHook=mouse_hook;

	//Subscribe mouse interrupts
	if(sys_irqsetpolicy(MOUSE_IRQ, IRQ_REENABLE|IRQ_EXCLUSIVE, &mouse_hook) != OK || sys_irqenable(&mouse_hook) != OK)
		return -1;

	return originalHook;
}

int mouse_unsubscribe_int(){

	//Unsubscribe mouse interrupts
	if(sys_irqdisable(&mouse_hook) != OK || sys_irqrmpolicy(&mouse_hook) != OK)
		return 1;

	return 0;
}

int mouse_enable_data_report(){

	//Write Byte to Mouse Comand to the cmd register of the kbc
	if(kbc_write(KBC_CMD_REG, BYTE_TO_MOUSE)){
		printf("Error in mouse_enable_data_report()-BYTE TO MOUSE\n");
		return 1;
	}

	//Write to the mouse the cmd we want through IN_BUF
	if(kbc_write(IN_BUF, ENABLE_DATA_REPORT)){
		printf("Error in mouse_enable_data_report()-ENABLE DATA REPORT\n");
		return 1;
	}

	//Return the mouse response (ACK,NACK,ERROR)
	return kbc_read();
}

int mouse_disable_data_report(){

	//Write Byte to Mouse Comand to the cmd register of the kbc
	if(kbc_write(KBC_CMD_REG, BYTE_TO_MOUSE)){
		printf("Error in mouse_disable_data_report()-BYTE TO MOUSE\n");
		return 1;
	}

	//Write to the mouse the cmd we want through IN_BUF
	if(kbc_write(IN_BUF, DISABLE_DATA_REPORT)){
		printf("Error in mouse_disable_data_report()-ENABLE DATA REPORT\n");
		return 1;
	}

	//Return the mouse response (ACK,NACK,ERROR)
	return kbc_read();
}

int mouse_set_stream_mode(){

	//Write Byte to Mouse Comand to the cmd register of the kbc
	if(kbc_write(KBC_CMD_REG, BYTE_TO_MOUSE)){
		printf("Error in mouse_set_stream_mode()-BYTE TO MOUSE\n");
		return 1;
	}

	//Write to the mouse the cmd we want through IN_BUF
	if(kbc_write(IN_BUF, SET_STREAM_MODE)){
		printf("Error in mouse_set_stream_mode()-ENABLE DATA REPORT\n");
		return 1;
	}

	//Return the mouse response (ACK,NACK,ERROR)
	return kbc_read();
}

int mouse_set_remote_mode(){

	//Write Byte to Mouse Comand to the cmd register of the kbc
	if(kbc_write(KBC_CMD_REG, BYTE_TO_MOUSE)){
		printf("Error in mouse_set_remote_mode()-BYTE TO MOUSE\n");
		return 1;
	}

	//Write to the mouse the cmd we want through IN_BUF
	if(kbc_write(IN_BUF, SET_REMOTE_MODE)){
		printf("Error in mouse_set_remote_mode()-ENABLE DATA REPORT\n");
		return 1;
	}

	//Return the mouse response (ACK,NACK,ERROR)
	return kbc_read();
}

void mouse_display_packet(unsigned char packet[]){
	//TODO: ALTERAR LB,MB,RG YOV,XOV
	printf("B1=0x%X ", packet[0]);
	printf("B2=0x%X ", packet[1]);
	printf("B3=0x%X ", packet[2]);
	printf("LB=%X ", (packet[0] & BIT(0)));
	printf("MB=%X ", (packet[0] & BIT(2)));
	printf("RB=%X ", (packet[0] & BIT(1)));
	printf("XOV=%X ", (packet[0] & BIT(6)));
	printf("YOV=%X ", (packet[0] & BIT(7)));
	printf("X=%X ", packet[1]);
	printf("Y=%X\n\n", packet[2]);

}

int mouse_get_packet(){
	unsigned long byte;
	int packet_index = 0;
	int sync_flag = 0;
	unsigned short nrpackets = 0;



}





