#include <minix/syslib.h>
#include <minix/drivers.h>
#include <minix/driver.h>
#include <minix/com.h>
#include <minix/sysutil.h>
#include "test4.h"
#include "keyboard.h"
#include "i8042.h"
#include "i8254.h"
#include "timer.h"
#include "mouse.h"

int mouse_test_packet(unsigned short cnt){

	int irq_set=mouse_subscribe_int();
	int ipc_status;
	message msg;
	int r;

	if(irq_set>=0){
		irq_set=BIT(irq_set);
	} else {
		printf("Error in mouse_test_packet::mouse_subscribe_int()\n");
		return 1;
	}

	mouse_set_stream_mode();
	mouse_enable_data_report();

	while(/*TODO*/1) {
			/* Get a request message. */
			if ( (r = driver_receive(ANY, &msg, &ipc_status)) != 0 ) {
				printf("driver_receive failed with: %d", r);
				continue;
			}
			if (is_ipc_notify(ipc_status)) { /* received notification */
				switch (_ENDPOINT_P(msg.m_source)) {
				case HARDWARE: /* hardware interrupt notification */
					if (msg.NOTIFY_ARG & irq_set) { /* subscribed interrupt */


					}
					break;
				default:
					break; /* no other notifications expected: do nothing */
				}
			} else { /* received a standard message, not a notification */
						/* no standard messages expected: do nothing */
			}


	if(mouse_unsubscribe_int()){
		printf("Unsubscribe failed\n In mouse_test_packet::mouse_unsubscribe_int()\n");
		return 1;
	}
}
}

int mouse_test_async(unsigned short idle_time){
    return 1;
}	

int mouse_test_remote(unsigned long period, unsigned short cnt){
    return 1;
}	

int mouse_test_gesture(short length){
    return 1;
}
