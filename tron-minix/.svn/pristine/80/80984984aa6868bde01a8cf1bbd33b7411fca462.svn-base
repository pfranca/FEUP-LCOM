#ifndef __MOUSE_H
#define __MOUSE_H

extern unsigned char packet[];

/** @defgroup Mouse Mouse
 * @{
 *
 * Functions for using the i8042 KBC INTERFACING WITH THE MOUSE
 */


typedef struct {
    int x;	/**< mouse x coordinate */
	int y;	/**< mouse y coordinate */

    int packet_idx;		/**< index of the packet being currently read*/
    int complete_packet;	/**< 1 if packet is ready to be read, 0 otherwise*/
    unsigned long packet[3]; 	/**< array containing the 3 mouse packets*/

    int leftButtonDown;		/**< 1 if mouse's left button is being pressed, 0 otherwise*/
    int leftButtonReleased;	/**< 1 if mouse's left button has just been released, 0 otherwise*/


    int draw;		/**< 1 if mouse must be displayed on the screen, 0 otherwise*/
} Mouse;




Mouse* newMouse();

Mouse* getMouse();

void updateMouse();

void drawMouse(unsigned char * cursor, int width, int height);

void deleteMouse();

void packet_handler();

int send_kbc_cmd(unsigned long cmd);

unsigned long read_out_buff();

int disable_data_report();

int enable_data_report();

int send_mouse_cmd(unsigned long cmd);

int send_kbd_cmd(unsigned long cmd);

int checkInside(unsigned x1, unsigned x2, unsigned y1, unsigned y2);


/**
 * @brief Subscribes and enables KBC interrupts
 *
 * @return Returns bit order in interrupt mask; negative value on failure
 */
int mouse_subscribe_int(void);

/**
 * @brief Unsubscribes KBC interrupts
 *
 * @return Return 0 upon success and non-zero otherwise
 */
int mouse_unsubscribe_int();


/**
 * @brief Enable mouse data report in stream mode
 *
 * @return Returns ACK, NACK or ERROR
 */
int mouse_enable_data_report();

/**
 * @brief Disable mouse data report in stream mode
 *
 * @return Returns ACK, NACK or ERROR
 */
int mouse_disable_data_report();

/**
 * @brief Puts mouse working in stream mode
 *
 * @return Returns ACK, NACK or ERROR
 */
int mouse_set_stream_mode();

/**
 * @brief Puts mouse working in remote mode
 *
 * @return Returns ACK, NACK or ERROR
 */
int mouse_set_remote_mode();


/**
 * @brief Gets the mouse packets and prints them on the screen
 *
 * @return 1 in case of success, 0 otherwise
 */
int mouse_get_packet();


#endif /* __KEYBOARD_H */
