#include "menu.h"
#include "video_gr.h"

#include "mouse.h"
#include "stbi_wrapper.h"

Menu* newMenu() {
	Menu* state = (Menu*) malloc(sizeof(Menu));

	state->done = 0;

	state->background = stbi_png_load(&state->background_width, &state->background_height, "/home/lcom/lcom1718-t8g01/tron-minix/images/background.png");
	state->play = stbi_png_load(&state->play_width, &state->play_height, "/home/lcom/lcom1718-t8g01/tron-minix/images/play.png");
	state->exit = stbi_png_load(&state->exit_width, &state->exit_height, "/home/lcom/lcom1718-t8g01/tron-minix/images/exit.png");

	return state;
}


void updateMenu(Menu* state, unsigned long scan_code){
/*
	if(scan_code == ESC_CODE){
		state->done =1;
		state->action =EXIT_GAME;
	}

	unsigned x1 = 400;
	unsigned x2= 600;
	unsigned y1 = 111;
	unsigned y2= 191;


	// checks if mouse inside Play Button
	if(checkInside(x1,x2,y1,y2) && getMouse()->leftButtonReleased){
		state->action = PLAY_GAME;
		state->done =1;
		getMouse()->leftButtonReleased =0;

	}

	x1 = 400;
	x2 = 600;
	y1= 211;
	y2= 291;


	// checks if mouse inside Exit Button
	if(checkInside(x1,x2,y1,y2) && getMouse()->leftButtonReleased) {
		state->action = EXIT_GAME;
		state->done =1;
		getMouse()->leftButtonReleased =0;
	}
*/

}


void drawMenu(Menu* state) {


	vg_png(state->background, state->background_width, state->background_height,0 , 100);
	vg_copy();


	vg_png(state->play, state->play_width, state->play_height, 400, 400);
	vg_copy();

	vg_png(state->exit, state->exit_width, state->exit_height, 400, 600);
	vg_copy();



}

void deleteMenu(Menu* state) {

	vg_free(); //Free buffer used for double buffering
	stbi_free(state->background);
	stbi_free(state->play); //Free image, lib has its own free
	stbi_free(state->exit);

	free(state);
}
